<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.coomia</groupId>
	<artifactId>flink-iceberg-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<description>flink iceberg integration tests.</description>
	<properties>
		<flink.version>1.11.3</flink.version>
		<hive.version>3.1.2</hive.version>
		<hadoop.version>3.2.1</hadoop.version>
		<iceberg.version>0.10.0</iceberg.version>
		<kafka.version>2.5.0</kafka.version>
		<scala.binary.version>2.12</scala.binary.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- flink core -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-core</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-java</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-clients_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-table-api-java-bridge_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-table-planner -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-table-planner_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>


			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-hive_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- statebackend using rocksdb. -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>

			<!-- Hive Dependency -->
			<dependency>
				<groupId>org.apache.hive</groupId>
				<artifactId>hive-exec</artifactId>
				<version>${hive.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.orc</groupId>
						<artifactId>orc-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- mapreduce -->
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-core</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>jersey-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-common</artifactId>
				<version>${hadoop.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-jobclient</artifactId>
				<version>${hadoop.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-hdfs</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>jersey-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-common</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>jersey-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.48</version>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-jdbc_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-connector-kafka -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-kafka_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-sql-connector-kafka_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.75</version>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-json</artifactId>
				<version>${flink.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-orc_${scala.binary.version}</artifactId>
				<version>${flink.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.orc</groupId>
						<artifactId>orc-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.parquet</groupId>
				<artifactId>parquet-avro</artifactId>
				<version>1.11.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>1.9.2</version>
			</dependency>


			<!-- <dependency> <groupId>org.apache.iceberg</groupId> <artifactId>iceberg-core</artifactId> 
				<version>${iceberg.version}</version> </dependency> -->

			<dependency>
				<groupId>org.apache.iceberg</groupId>
				<artifactId>iceberg-flink</artifactId>
				<version>${iceberg.version}</version>
			</dependency>

			<!-- Add logging framework, to produce console output when running in 
				the IDE. -->
			<!-- These dependencies are excluded from the application JAR by default. -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.7</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
				<scope>runtime</scope>
			</dependency>

			<!-- kafka client -->

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.8</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- flink core -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-core</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-java</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-clients_${scala.binary.version}</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<!-- Java Compiler -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<useIncrementalCompilation>false</useIncrementalCompilation>
						<compilerArgs>
							<!-- Prevents recompilation due to missing package-info.class, see 
								MCOMPILER-205 -->
							<arg>-Xpkginfo:always</arg>
						</compilerArgs>
					</configuration>
				</plugin>

				<!-- This improves the out-of-the-box experience in Eclipse by resolving 
					some warnings. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-shade-plugin</artifactId>
										<versionRange>[3.1.1,)</versionRange>
										<goals>
											<goal>shade</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-compiler-plugin</artifactId>
										<versionRange>[3.1,)</versionRange>
										<goals>
											<goal>testCompile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
		</plugins>
	</build>


	<modules>
		<module>flink-hive-test</module>
		<module>flink-kafka-test</module>
	</modules>
</project>